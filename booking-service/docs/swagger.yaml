basePath: /
definitions:
  model.Booking:
    properties:
      customer_name:
        minLength: 2
        type: string
      date:
        type: string
      id:
        type: integer
      status:
        enum:
        - confirmed
        - cancelled
        - pending
        type: string
    required:
    - customer_name
    - date
    - status
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing bookings
  title: Booking API
  version: "1.0"
paths:
  /bookings:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Booking'
            type: array
      summary: List all bookings
    post:
      consumes:
      - application/json
      parameters:
      - description: Booking JSON
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/model.Booking'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Create a new booking
  /bookings/{id}:
    delete:
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete a booking
    get:
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Booking'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get a booking by ID
    put:
      consumes:
      - application/json
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      - description: Booking JSON
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/model.Booking'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Update a booking
swagger: "2.0"
